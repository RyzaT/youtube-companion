{"version":3,"sources":["Components/Navbar/Logo.png","Components/Modal/index.js","Components/Navbar/index.js","Components/Jumbotron/index.js","Components/Card_Playlist/index.js","API/apiKey.js","Components/Searchbar/index.js","Components/Card_Storage/index.js","Components/Profile/index.js","Components/Playlist/index.js","Components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","WelcomeModal","_useState","useState","_useState2","_slicedToArray","show","setShow","handleClose","React","createElement","Modal","onHide","Header","closeButton","Title","style","color","Body","Footer","textAlign","Button","variant","onClick","Navbar","class","href","fontWeight","src","Logo","alt","width","height","className","window","onload","document","querySelector","classList","add","Jumbotron","styles","text_container","ListCard","props","message","setMessage","opts","playerVars","autoplay","loop","listType","list","listID","Card","YouTube","taskSaved","getTasks","arr","localStorage","getItem","JSON","parse","console","log","taskObject","userSave","profile","savedList","push","setItem","stringify","setTimeout","apiKey","playLists","Searchbar","videoID","setVideo","_useState3","keyword","_useState4","searchParam","setSearch","_useState5","_useState6","visibility","setVisible","listItems","map","number","InputGroup","Form","Control","placeholder","aria-label","aria-describedby","onSubmit","e","preventDefault","onChange","_objectSpread","target","value","axios","get","params","part","q","maxResults","type","key","then","response","data","items","id","playlistId","i","length","catch","error","finally","FaSearch","order","randomVideoID","Math","floor","random","GiPerspectiveDiceSixFacesRandom","ListCardStorage","clicked","setClicked","Text","splice","Profile","returnedLists","setLists","showSavedLists","setShowSavedLists","listItems1","concat","_toConsumableArray","alert","FaUpload","Playlist","children","FaGithub","FaEnvelope","FaLinkedin","App","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.d093f1a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.63a3f51a.png\";","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction WelcomeModal() {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title style={{ color: 'black' }} >Welcome to Your Youtube Companion</Modal.Title>\n      </Modal.Header>\n      <Modal.Body style={{ color: 'black' }} >\n        <p>In order to create a playlist, please follow these steps:</p>\n        <ol>\n              <li>Create a playlist profile, eg. Gym, Coding, Meditation...</li>\n              <li>Type a keyword in the search bar, and click search eg. Rock, Rap, Classical...</li>\n              <li>When playlist is created, you can click the save button under a song to save for later use.</li>\n            </ol>\n      </Modal.Body>\n      <Modal.Footer style={{ textAlign: 'left', color: 'black' }}>\n        <p>Enjoy your playlist. Your Youtube, Your Way!</p>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default WelcomeModal;\n","import React from 'react'\nimport 'react-bootstrap'\nimport 'bootstrap'\nimport '../Navbar/style.css'\nimport Logo from '../Navbar/Logo.png'\n\nfunction Navbar() {\n  return (\n    <nav class=\"navbar navbar-light bg-light w-100\">\n      <div class=\"container-fluid mx-auto my-auto\">\n        <a class=\"navbar-brand mx-auto my-auto\" href=\"#\" style={{fontWeight: \"bolder\"}}>\n          <img src={Logo} alt=\"\" width=\"35\" height=\"45\" class=\"d-inline-block align-text-center\" className='navbar-text'/>\n             Youtube Companion\n        </a>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport styles from \"./style.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nwindow.onload = function() {\n  document.querySelector('body').classList.add('loaded')\n}\n\nfunction Jumbotron() {\n  return (\n    \n    <div className={styles.text_container}>\n      <h1><span>Your</span><span> YouTube</span></h1>\n      <h1><span>Your</span><span> Way</span></h1>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport YouTube from 'react-youtube';\nimport { useState } from 'react';\nimport Searchbar from \"../Searchbar\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport \"./style.css\";\n\n\n\n\nfunction ListCard(props) {\n\n  const [message, setMessage] = useState(\"\")\n\n  // embedded player options\n  const opts = {\n    height: '180',\n    width: '180',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n      loop: 0,\n      listType: 'playlist',\n      list: props.listID\n\n    },\n  };\n\n\n  function savePlaylist() {\n\n    // new array for values from a local storage\n    let taskSaved = [];\n    taskSaved = getTasks(taskSaved);\n    console.log(taskSaved)\n\n    // retrieve saved values from local storage if any exists\n    function getTasks(arr) {\n      if (localStorage.getItem(\"taskObject\") === null) {\n        arr = [];\n      } else {\n        arr = JSON.parse(localStorage.getItem(\"taskObject\"));\n      }\n      return arr;\n    }\n\n    // get updated list of tasks from storage \n    let taskObject = getTasks(taskSaved);\n    let userSave = {\n\n      profile: \"default\",\n      savedList: props.listID\n\n    }\n    // add new value to array\n    taskObject.push(userSave);\n    // save to local storage\n    localStorage.setItem(\"taskObject\", JSON.stringify(taskObject));\n\n    taskSaved = taskObject;\n\n    setMessage(\"The song has been saved\")\n\n    // set a timeout to clear the message after 2 seconds\n    setTimeout(() => {\n      setMessage(\"\");\n    }, 1000);\n  }\n\n  return (\n\n    <Card className=\"cardPlaylist\" style={{ width: '18rem' }}>\n\n\n      <Card.Body >\n        <YouTube opts={opts} />\n        <Button onClick={savePlaylist} variant=\"primary\"  >Save</Button>\n        <div className=\"save-message\">{message}</div> {/* display the state in a separate div */}\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ListCard;","import React from \"react\";\n\nconst apiKey = \"AIzaSyCwYo1wj8J1bC-bNGaOYLSkdvH7j5tgZYk\";\n\nexport {apiKey}","// useState to control search result\nimport React, { useState } from \"react\";\n// new npm package for convinience\nimport YouTube from 'react-youtube';\n// nmp package for getting data\nimport axios from 'axios';\n\nimport { FaSearch } from 'react-icons/fa';\nimport { GiPerspectiveDiceSixFacesRandom } from 'react-icons/gi'\n\nimport ListCard from '../Card_Playlist'\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nimport { apiKey } from '../../API/apiKey'\nimport \"./style.css\";\n\n\n// potential playlists to be exported to Playlist component. Can be extracted from response.data.items[0].id.playlistId instead of videoID\n// or simply contain all video id and playlist ID and play\nlet playLists = []\n\n\n\n\nfunction Searchbar() {\n\n  // manage video id from GET request\n  const [videoID, setVideo] = useState(\"\");\n\n\n  // control input value\n  const [searchParam, setSearch] = useState({\n    keyword: \"\",\n\n  });\n\n  // control visibility of youtube player - show only if user press trending button\n  const [visibility, setVisible] = useState(false)\n\n\n  // embedded player options\n  const opts = {\n    height: '240',\n    width: '240',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n      loop: 0,\n      listType:'playlist',\n      list: videoID\n\n    },\n  };\n\n  // submit form input event\n  const handleSubmit = (e) => {\n    // prevents the submit button from refreshing the page\n    e.preventDefault();\n\n\n  };\n\n\n  // button click event\n  function getUserDefinedVideo() {\n\n\n    // first get request for a user defined playlist\n    const apiCallString = 'https://youtube.googleapis.com/youtube/v3/search'\n    axios.get(apiCallString, {\n      params: {\n        part: 'snippet',\n        q: searchParam.keyword,\n        maxResults: 5,\n        type: \"playlist\",\n        key: apiKey\n      }\n    })\n      .then(function (response) {\n        // handle success\n        // console.log(response)\n        setVideo(response.data.items[0].id.playlistId)\n\n        playLists = []\n        for (let i = 0; i < response.data.items.length; i++) {\n\n          playLists.push(response.data.items[i].id.playlistId)\n\n        }\n      \n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n\n  }\n\n  // second get request for a random popular playlist\n  function getRandomVideo() {\n\n    const maxVideosCount = 5\n\n    const apiCallString = 'https://youtube.googleapis.com/youtube/v3/search'\n    axios.get(apiCallString, {\n      params: {\n        q: 'music',\n        part: 'snippet',\n        type: \"playlist\",\n        key: apiKey,\n        order: 'Viewcount',\n        maxResults: maxVideosCount\n\n      }\n    })\n      .then(function (response) {\n        // handle success\n        let randomVideoID = Math.floor(Math.random() * maxVideosCount) - 1\n        setVideo(response.data.items[randomVideoID].id.playlistId)\n// make player visible\n        setVisible(true)\n\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .finally(function () {\n        // always executed\n      });\n\n\n\n  }\n// generate a list of playlists\n  const listItems = playLists.map((number) =>\n    <ListCard listID={number}></ListCard>\n\n  );\n\n\n  return (\n    <div className=\"row\">\n      <div className=\"mx-auto col-10 col-md-8 col-lg-6\">\n        <InputGroup className=\"mb-3 input-style\">\n          <Form.Control\n\n            placeholder=\"type keywords\"\n            aria-label=\"type topic\"\n            aria-describedby=\"basic-addon2\"\n            onSubmit={handleSubmit}\n            onChange={(e) => setSearch({ ...searchParam, keyword: e.target.value })}\n\n          />\n          <Button onClick={getUserDefinedVideo} variant=\"outline-secondary\" className=\"searchButton\">\n            <FaSearch />\n          </Button>\n          <Button onClick={getRandomVideo}>Get Trending List<GiPerspectiveDiceSixFacesRandom></GiPerspectiveDiceSixFacesRandom></Button>\n        </InputGroup>\n\n      </div>\n      <YouTube opts={opts} style={{ visibility: visibility ? \"visible\" : \"hidden\" }} />\n      <div >\n        {listItems}\n      </div>\n    </div>\n  );\n}\n\nexport default Searchbar;\n\n","import React from \"react\";\nimport YouTube from 'react-youtube';\nimport { useState } from 'react';\nimport Searchbar from \"../Searchbar\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport \"./style.css\";\n\n\n\n//let playLists =[]\nfunction ListCardStorage(props) {\n\n  // control visibility\n  const [clicked, setClicked] = useState(true);\n   \n// required to control array update event and accordingly render playlists\n\n// embedded player options\nconst opts = {\n  height: '180',\n  width: '180',\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 0,\n    loop:0,\n    listType:'playlist',\n    list:props.listID\n    \n  },\n};\n\n\n\nfunction getTasks(arr) {\n  if (localStorage.getItem(\"taskObject\") === null) {\n    arr = [];\n  } else {\n    arr = JSON.parse(localStorage.getItem(\"taskObject\"));\n  }\n  return arr;\n}\n\n\nconst removeItem = () => {\n\n  setClicked(false);\n  // new array for values from a local storage\n  let taskSaved = [];\n  taskSaved = getTasks(taskSaved);\n // playLists=JSON.stringify(taskSaved)\n //alert(taskSaved[0].profile)\n  for(let i=0; i < taskSaved.length; i++) {\n   // alert(i)\n   // alert(taskSaved[i].profile)\n    if(taskSaved[i].profile === \"default\" && taskSaved[i].savedList === props.listID)\n    {\n      taskSaved.splice(i,1);\n      \n    }\n }\n localStorage.setItem(\"taskObject\", JSON.stringify(taskSaved));\n\n}\n\n  return (\n  \n    <Card className=\"cardPlaylist\" style={{ width: '18rem',visibility: clicked ? \"visible\" : \"hidden\" } }>\n      <Card.Title>Saved Song</Card.Title>\n       <YouTube  opts={opts}  />\n      <Card.Body>\n        \n        <Card.Text>\n        <p>Default profile</p>\n        </Card.Text>\n        <Button  onClick={removeItem} variant=\"danger\"  >Remove from favourites</Button>\n        \n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ListCardStorage;\n","import React from \"react\";\nimport { useState } from 'react';\nimport ListCardStorage from '../Card_Storage'\nimport { FaUpload } from 'react-icons/fa';\nimport \"./style.css\";\n\n\n\n\n\nlet playLists = []\n\n\n\nfunction Profile() {\n\n/* if(playLists.length>0){\n  playLists.length=0\n} */\n\n  // required to control array update event and accordingly render playlists\n  const [returnedLists, setLists] = useState([]);\n  const [showSavedLists, setShowSavedLists] = useState(false);\n\n  function getTasks(arr) {\n    if (localStorage.getItem(\"taskObject\") === null) {\n      arr = [];\n    } else {\n      arr = JSON.parse(localStorage.getItem(\"taskObject\"));\n    }\n    return arr;\n  }\n\n  function getData() {\n    // new array for values from a local storage\n    let taskSaved = [];\n    taskSaved = getTasks(taskSaved);\n    playLists=[]\n    // update array of values to render lists\n    if (taskSaved.length > 0) {\n      for (let i = 0; i < taskSaved.length; i++) {\n        playLists.push(taskSaved[i].savedList)\n        setLists([...returnedLists, taskSaved[i].savedList]);\n      }\n      setShowSavedLists(true)\n    }\n    else {\n      alert(\"No saved playlists\")\n    }\n    \n  }\n\n\n\n\n\n\n\n\n\n\n  // generates JSX \n  const listItems1 = playLists.map((number) =>\n    <ListCardStorage listID={number}></ListCardStorage>);\n\n  return (\n    <div>\n      <p style={{color: \"black\", fontWeight: \"bold\"}}>\n        Display saved items below \n        <span>\n          <button onClick={getData} className=\"viewsavedButton\"><FaUpload /></button>\n        </span>\n        {showSavedLists && (\n          <span>\n            <button onClick={() => setShowSavedLists(false)}>Hide saved items</button>\n            <div className=\"card-row\">{listItems1}</div> {/* wrap list items in a div with class \"card-row\" */}\n          </span>\n        )}\n      </p> \n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\nimport ListCard, {props} from '../Card_Playlist'\nimport Searchbar from \"../Searchbar\";\n\n//import { playLists } from \"../Searchbar\";\n// this should probably return a list from local storage as it looks impossible ot update imported array fro Search bar. If anyone knows, contact me ))\n\nimport \"./style.css\";\n\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nfunction Playlist(props) {\n  return <main className=\"container\">{props.children}</main>;;\n}\n\n\nexport default Playlist;\n","import React from \"react\";\nimport {FaGithub, FaEnvelope, FaLinkedin} from 'react-icons/fa';\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <h4 className=\"contact-heading\">Contact Us</h4>\n      <div className=\"contact-container\">\n      <section>\n        <h4><FaGithub/>Github</h4>\n        <ul>\n          <li><a href=\"https://github.com/RyzaT\">RyzaT</a></li>\n          <li><a href=\"https://github.com/KonstantinGolovahin\">KonstantinGolovahin</a></li>\n          <li><a href=\"https://github.com/JayClay922\">JayClay922</a></li>\n        </ul>\n      </section>\n      <section>\n        <h4><FaEnvelope/>Email</h4>\n        <ul>\n          <li><a href=\"mailto:ryant.webdev@gmail.com\">ryant.webdev@gmail.com</a></li>\n          <li><a href=\"mailto:sobakoved@inbox.lv\">sobakoved@inbox.lv</a></li>\n          <li><a href=\"mailto:jamesclayman922@live.com\">jamesclayman922@live.com</a></li>\n        </ul>\n      </section>\n      <section>\n        <h4><FaLinkedin/>LinkedIn</h4>\n        <ul>\n          <li><a href=\"http://linkedin.com/in/ryan-taylor-7715b775\">Ryan Taylor</a></li>\n          <li><a href=\"https://www.linkedin.com/in/konstantin-golovahin-07b977268/\">Konstantin Golovahin</a></li>\n          <li><a href=\"https://www.linkedin.com/in/james-clayman-76ba7775\">James Clayman</a></li>\n        </ul>\n      </section>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","\nimport React from 'react';\nimport './App.css';\n\nimport WelcomeModal from './Components/Modal'\nimport Navbar from './Components/Navbar';\nimport Jumbotron from \"./Components/Jumbotron\";\nimport Searchbar from \"./Components/Searchbar\";\nimport Profile from \"./Components/Profile\";\nimport Playlist from \"./Components/Playlist\";\nimport Footer from \"./Components/Footer\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <WelcomeModal/>\n     <Navbar/>\n     <Jumbotron />\n     <Searchbar />\n     <Profile />\n     <Playlist />\n     <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}