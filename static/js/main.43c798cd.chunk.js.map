{"version":3,"sources":["Components/Navbar/Logo.png","Components/Modal/index.js","Components/Navbar/index.js","Components/Jumbotron/index.js","Components/Card_Playlist/index.js","API/apiKey.js","Components/Searchbar/index.js","Components/Card_Storage/index.js","Components/Profile/index.js","Components/Playlist/index.js","Components/Footer/index.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","WelcomeModal","_useState","useState","_useState2","_slicedToArray","show","setShow","handleClose","React","createElement","Modal","onHide","Header","closeButton","Title","Body","Footer","style","textAlign","Button","variant","onClick","Navbar","class","src","Logo","alt","width","height","window","onload","document","querySelector","classList","add","Jumbotron","className","styles","text_container","ListCard","props","opts","playerVars","autoplay","loop","listType","list","listID","Card","YouTube","taskSaved","getTasks","arr","localStorage","getItem","JSON","parse","console","log","taskObject","userSave","profile","savedList","push","setItem","stringify","apiKey","playLists","Searchbar","videoID","setVideo","_useState3","keyword","_useState4","searchParam","setSearch","listItems","map","number","InputGroup","Form","Control","placeholder","aria-label","aria-describedby","onSubmit","e","preventDefault","onChange","_objectSpread","target","value","axios","get","params","part","q","maxResults","type","key","then","response","data","items","id","playlistId","i","length","catch","error","finally","FaSearch","visibility","ListCardStorage","clicked","setClicked","Text","splice","Profile","returnedLists","setLists","listItems1","concat","_toConsumableArray","alert","FaUpload","Playlist","children","App","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.43c798cd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.63a3f51a.png\";","import React, { useState } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nfunction WelcomeModal() {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => setShow(false);\n\n  return (\n    <Modal show={show} onHide={handleClose}>\n      <Modal.Header closeButton>\n        <Modal.Title>Welcome to Your Youtube Companion</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <p>In order to create a playlist, please follow these steps:</p>\n        <ol>\n              <li>Create a playlist profile, eg. Gym, Coding, Meditation...</li>\n              <li>Type a keyword in the search bar, and click search eg. Rock, Rap, Classical...</li>\n              <li>When playlist is created, you can click the save button under a song to save for later use.</li>\n            </ol>\n      </Modal.Body>\n      <Modal.Footer style={{ textAlign: 'left' }}>\n        <p>Enjoy your playlist. Your Youtube, Your Way!</p>\n        <Button variant=\"primary\" onClick={handleClose}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default WelcomeModal;\n","import React from 'react'\nimport 'react-bootstrap'\nimport 'bootstrap'\nimport '../Navbar/style.css'\nimport Logo from '../Navbar/Logo.png'\n\nfunction Navbar() {\n  return (\n    <nav class=\"navbar navbar-light bg-light\">\n      <div class=\"container-fluid mx-auto my-auto\">\n        {/* <a class=\"navbar-brand mx-auto my-auto\" href=\"\"> */}\n          <img src={Logo} alt=\"\" width=\"40\" height=\"40\" class=\"d-inline-block align-text-center\"/>\n             Youtube Companion\n        {/* </a> */}\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;","import React from \"react\";\nimport styles from \"./style.css\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\nwindow.onload = function() {\n  document.querySelector('body').classList.add('loaded')\n}\n\nfunction Jumbotron() {\n  return (\n    \n    <div className={styles.text_container}>\n      <h1><span>Your</span><span> YouTube</span></h1>\n      <h1><span>Your</span><span> Way</span></h1>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport YouTube from 'react-youtube';\n// import { useState } from 'react';\n// import Searchbar from \"../Searchbar\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport \"./style.css\";\n\n\n\n\nfunction ListCard(props) {\n\n\n  // embedded player options\n  const opts = {\n    height: '180',\n    width: '180',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n      loop: 0,\n      listType: 'playlist',\n      list: props.listID\n\n    },\n  };\n\n\n  function savePlaylist() {\n\n    // new array for values from a local storage\n    let taskSaved = [];\n    taskSaved = getTasks(taskSaved);\n    console.log(taskSaved)\n\n    // retrieve saved values from local storage if any exists\n    function getTasks(arr) {\n      if (localStorage.getItem(\"taskObject\") === null) {\n        arr = [];\n      } else {\n        arr = JSON.parse(localStorage.getItem(\"taskObject\"));\n      }\n      return arr;\n    }\n\n    // get updated list of tasks from storage \n    let taskObject = getTasks(taskSaved);\n    let userSave = {\n\n      profile: \"default\",\n      savedList: props.listID\n\n    }\n    // add new value to array\n    taskObject.push(userSave);\n    // save to local storage\n    localStorage.setItem(\"taskObject\", JSON.stringify(taskObject));\n\n    taskSaved = taskObject;\n\n\n\n  }\n\n  return (\n\n    <Card className=\"cardPlaylist\" style={{ width: '18rem' }}>\n    \n     \n      <Card.Body >\n      <YouTube opts={opts} />\n        <Button onClick={savePlaylist} variant=\"primary\"  >Save</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ListCard;\n","// import React from \"react\";\n\nconst apiKey = \"AIzaSyCwYo1wj8J1bC-bNGaOYLSkdvH7j5tgZYk\";\n\nexport {apiKey}","// useState to control search result\nimport React, {useState} from \"react\";\n// new npm package for convinience\nimport YouTube from 'react-youtube';\n// nmp package for getting data\nimport axios from 'axios';\n\nimport { FaSearch } from 'react-icons/fa';\n\nimport ListCard from '../Card_Playlist'\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup'\n\nimport {apiKey} from '../../API/apiKey'\nimport \"./style.css\";\n\n\n // potential playlists to be exported to Playlist component. Can be extracted from response.data.items[0].id.playlistId instead of videoID\n  // or simply contain all video id and playlist ID and play\n  let playLists= []\n\n  \n\n\nfunction Searchbar() {\n  \n// manage video id from GET request\n  const [videoID, setVideo] = useState(\"\");\n\n\n  // control input value\n  const [searchParam, setSearch] = useState({\n    keyword: \"\",\n   \n  });\n\n \n \n  \n   \n\n// embedded player options\n  const opts = {\n    height: '2',\n    width: '240',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 0,\n      loop:0,\n      listType:'playlist',\n      list:videoID\n      \n    },\n  };\n\n  // submit form input event\n  const handleSubmit = (e) => {\n    // prevents the submit button from refreshing the page\n    e.preventDefault();\n   // playLists= [];\n   \n  };\n\n   \n  // button click event\n  function handleClick() {\n   \n\n  //  const apiCallString =\"https://youtube.googleapis.com/youtube/v3/search?part=snippet&maxResults=5&q=doom&key=\"+apiKey\n  const apiCallString ='https://youtube.googleapis.com/youtube/v3/search'\n    axios.get(apiCallString, {\n      params: {\n        part:'snippet',\n        q: searchParam.keyword,\n        maxResults: 5,\n        type:\"playlist\",\n        key: apiKey\n    }\n  })\n    .then(function (response) {\n      // handle success\n     // console.log(response)\n      setVideo(response.data.items[0].id.playlistId)\n\n      playLists=[]\n      for (let i=0;i<response.data.items.length;i++){\n\n       playLists.push(response.data.items[i].id.playlistId)\n        \n      }\n      \n          \n     // console.log(playLists)\n  \n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n    .finally(function () {\n      // always executed\n    });\n    \n\n\n  }\n  \n  \n  \n  const listItems = playLists.map((number) =>\n  <ListCard listID={number}></ListCard> \n\n);\n  \n  \n  return (\n    <div className=\"row\">\n<div className=\"mx-auto col-10 col-md-8 col-lg-6\">\n<InputGroup className=\"mb-3 input-style\">\n        <Form.Control\n          \n          placeholder=\"type keywords\"\n          aria-label=\"type topic\"\n          aria-describedby=\"basic-addon2\"\n          onSubmit={handleSubmit}\n          onChange={(e) => setSearch({...searchParam, keyword: e.target.value})}\n          \n        />\n        <Button  onClick={handleClick} variant=\"outline-secondary\"  className=\"searchButton\">\n        <FaSearch />\n        </Button>\n      </InputGroup>\n\n      </div>\n  \n    <YouTube  opts={opts} style={{visibility:\"hidden\"}} />\n\n   \n     <div >\n\n{listItems}\n \n     </div>\n   \n\n    </div>\n  );\n}\n\n\n\n\n\n\n\n\nexport default Searchbar;\n//export {playLists}\n","import React from \"react\";\nimport YouTube from 'react-youtube';\nimport { useState } from 'react';\n// import Searchbar from \"../Searchbar\";\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport \"./style.css\";\n\n\n\n//let playLists =[]\nfunction ListCardStorage(props) {\n\n  // control visibility\n  const [clicked, setClicked] = useState(true);\n   \n// required to control array update event and accordingly render playlists\n\n// embedded player options\nconst opts = {\n  height: '180',\n  width: '180',\n  playerVars: {\n    // https://developers.google.com/youtube/player_parameters\n    autoplay: 0,\n    loop:0,\n    listType:'playlist',\n    list:props.listID\n    \n  },\n};\n\n\n\nfunction getTasks(arr) {\n  if (localStorage.getItem(\"taskObject\") === null) {\n    arr = [];\n  } else {\n    arr = JSON.parse(localStorage.getItem(\"taskObject\"));\n  }\n  return arr;\n}\n\n\nconst removeItem = () => {\n\n  setClicked(false);\n  // new array for values from a local storage\n  let taskSaved = [];\n  taskSaved = getTasks(taskSaved);\n // playLists=JSON.stringify(taskSaved)\n //alert(taskSaved[0].profile)\n  for(let i=0; i < taskSaved.length; i++) {\n   // alert(i)\n   // alert(taskSaved[i].profile)\n    if(taskSaved[i].profile === \"default\" && taskSaved[i].savedList === props.listID)\n    {\n      taskSaved.splice(i,1);\n      \n    }\n }\n localStorage.setItem(\"taskObject\", JSON.stringify(taskSaved));\n\n}\n\n  return (\n  \n    <Card className=\"cardPlaylist\" style={{ width: '18rem',visibility: clicked ? \"visible\" : \"hidden\" } }>\n      <Card.Title>Saved List</Card.Title>\n       <YouTube  opts={opts}  />\n      <Card.Body>\n        \n        <Card.Text>\n        <p>Default profile</p>\n        </Card.Text>\n        <Button  onClick={removeItem} variant=\"danger\"  >Remove from favourites</Button>\n        \n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default ListCardStorage;\n","import React from \"react\";\nimport { useState } from 'react';\nimport ListCardStorage from '../Card_Storage'\nimport { FaUpload } from 'react-icons/fa';\nimport \"./style.css\";\n\n\n\n\n\nlet playLists = []\n\n\n\nfunction Profile() {\n\n/* if(playLists.length>0){\n  playLists.length=0\n} */\n\n  // required to control array update event and accordingly render playlists\n  const [returnedLists, setLists] = useState([]);\n\n  function getTasks(arr) {\n    if (localStorage.getItem(\"taskObject\") === null) {\n      arr = [];\n    } else {\n      arr = JSON.parse(localStorage.getItem(\"taskObject\"));\n    }\n    return arr;\n  }\n\n  function getData() {\n    // new array for values from a local storage\n    let taskSaved = [];\n    taskSaved = getTasks(taskSaved);\n    playLists=[]\n    // update array of values to render lists\n    if (taskSaved.length > 0) {\n      for (let i = 0; i < taskSaved.length; i++) {\n        playLists.push(taskSaved[i].savedList)\n        setLists([...returnedLists, taskSaved[i].savedList]);\n      }\n    }\n    else {\n      alert(\"No saved playlists\")\n    }\n    \n  }\n\n\n\n\n\n\n\n\n\n\n  // generates JSX \n  const listItems1 = playLists.map((number) =>\n    <ListCardStorage listID={number}></ListCardStorage>);\n\n  return (\n    <div>\n      <p>Display saved items below <span><button onClick={getData} className=\"viewsavedButton\"><FaUpload /></button></span></p> \n      \n      <ul className=\"list-group list-group-flush\">\n\n      </ul>\n      <div>\n        {listItems1}\n      </div>\n\n      \n     \n\n    </div>\n  );\n}\n\nexport default Profile;\n","import React from \"react\";\n// import ListCard, {props} from '../Card_Playlist'\n// import Searchbar from \"../Searchbar\";\n\n//import { playLists } from \"../Searchbar\";\n// this should probably return a list from local storage as it looks impossible ot update imported array fro Search bar. If anyone knows, contact me ))\n\nimport \"./style.css\";\n\n// import Button from 'react-bootstrap/Button';\n// import Card from 'react-bootstrap/Card';\n\nfunction Playlist(props) {\n  return <main className=\"container\">{props.children}</main>;;\n}\n\n\nexport default Playlist;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer \">\n      <span>Footer text and icons</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","\nimport React from 'react';\nimport './App.css';\n\nimport WelcomeModal from './Components/Modal'\nimport Navbar from './Components/Navbar';\nimport Jumbotron from \"./Components/Jumbotron\";\nimport Searchbar from \"./Components/Searchbar\";\nimport Profile from \"./Components/Profile\";\nimport Playlist from \"./Components/Playlist\";\nimport Footer from \"./Components/Footer\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <WelcomeModal/>\n     <Navbar/>\n     <Jumbotron />\n     <Searchbar />\n     <Profile />\n     <Playlist />\n     <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}